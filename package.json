{
  "name": "simple-rpc-ai-backend",
  "version": "0.1.0",
  "description": "Simple RPC client and server for AI-powered VS Code extensions with secure system prompt management",
  "private": true,
  "type": "module",
  "main": "dist/index.js",
  "exports": {
    ".": "./dist/index.js",
    "./client": "./dist/client.js",
    "./server": "./dist/server.js",
    "./ai": "./dist/ai-service.js"
  },
  "scripts": {
    "build": "tsc && npm run copy-assets",
    "build:prod": "npm run registry:prepare && npm run build",
    "copy-assets": "mkdir -p dist/docker dist/database/migrations && cp -r docker/* dist/docker/ && cp docker-compose.postgres.yml dist/ && cp .env.postgres.example dist/ && cp src/database/migrations/*.sql dist/database/migrations/",
    "registry:setup": "node scripts/setup-providers.js",
    "registry:download": "node scripts/setup-providers.js --provider",
    "registry:prepare": "node scripts/setup-providers.js",
    "registry:health": "node examples/registry-health-monitoring.js",
    "registry:monitor": "node examples/registry-health-monitoring.js --continuous",
    "dev": "tsc --watch",
    "dev:server": "node --watch examples/servers/basic-server.js",
    "test": "vitest",
    "test:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:ui": "vitest --ui",
    "test:integration": "node test/integration/index.js",
    "test:manual": "tsx src/test/**/*.test.ts",
    "test:isolation": "tsx src/test/postgres/user-isolation.test.ts",
    "test:postgres": "tsx src/test/postgres/user-isolation.test.ts",
    "typecheck": "tsc --noEmit",
    "clean": "rimraf dist coverage",
    "lint": "eslint src/**/*.ts",
    "format": "prettier --write src/**/*.ts",
    "prepublishOnly": "npm run build",
    "playground": "npx @open-rpc/playground --schema openrpc.json --server http://localhost:8000/rpc",
    "inspector": "node tools/openrpc-inspector/index.js --schema openrpc.json --port 3002",
    "playground:docker": "docker run -p 3001:80 -v $(pwd)/openrpc.json:/app/openrpc.json openrpc/playground",
    "validate:openrpc": "npx @open-rpc/schema-utils-js validate --document openrpc.json",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:server\" \"npm run playground\"",
    "dev:docs": "concurrently \"npm run dev\" \"npm run dev:server\" \"npm run inspector\"",
    "postgres:setup": "./docker/setup-postgres.sh",
    "postgres:start": "docker-compose --env-file .env.postgres -f docker-compose.postgres.yml up -d",
    "postgres:stop": "docker-compose --env-file .env.postgres -f docker-compose.postgres.yml down",
    "postgres:logs": "docker-compose --env-file .env.postgres -f docker-compose.postgres.yml logs -f",
    "demo:storage": "node examples/flexible-storage-examples.js",
    "demo:trpc": "node -e \"import('./dist/server-trpc.js').then(({createTRPCServer}) => { const server = createTRPCServer({port: 8001}); server.start().then(() => console.log('ðŸš€ tRPC demo running on http://localhost:8001\\nTry: curl http://localhost:8001/health')); })\"",
    "test:trpc": "node -e \"import('./dist/server-trpc.js').then(async ({createTRPCServer}) => { const s = createTRPCServer({port: 8003}); await s.start(); const r = await fetch('http://localhost:8003/health'); console.log('âœ… tRPC test:', (await r.json()).status); await s.stop(); })\""
  },
  "keywords": [
    "vscode",
    "extension",
    "rpc",
    "ai",
    "anthropic",
    "openai",
    "code-analysis",
    "backend",
    "jsonrpc",
    "secure"
  ],
  "author": "Extracted from universal-ai-encryption-mcp",
  "license": "MIT",
  "dependencies": {
    "@ai-sdk/anthropic": "^0.0.0",
    "@ai-sdk/google": "^0.0.0",
    "@ai-sdk/openai": "^0.0.0",
    "@anolilab/ai-model-registry": "^1.3.0",
    "@trpc/client": "^11.4.4",
    "@trpc/server": "^11.4.4",
    "@types/ioredis": "^5.0.0",
    "ai": "^3.0.0",
    "axios": "^1.6.2",
    "bcrypt": "^5.1.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "fast-xml-parser": "^4.3.2",
    "helmet": "^7.1.0",
    "ioredis": "^5.7.0",
    "json-rpc-2.0": "^1.7.1",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2",
    "pg": "^8.16.3",
    "redis": "^5.7.0",
    "superjson": "^2.2.2",
    "trpc-panel": "^1.3.4",
    "uuid": "^9.0.1",
    "winston": "^3.17.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@testcontainers/postgresql": "^10.2.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.0",
    "@types/express": "^4.17.0",
    "@types/jsonwebtoken": "^9.0.3",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.15.5",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitest/coverage-v8": "^1.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.0.0",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.4",
    "typescript": "^5.0.0",
    "vitest": "^1.0.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE.md",
    "docker/**/*",
    "docker-compose.postgres.yml",
    ".env.postgres.example",
    "src/database/migrations/*.sql"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/AWolf81/simple-rpc-ai-backend"
  },
  "pnpm": {
    "overrides": {
      "nanoid": "^3.3.8",
      "esbuild": "^0.25.0"
    },
    "peerDependencyRules": {
      "ignoreMissing": [
        "@trpc/server"
      ],
      "allowedVersions": {
        "trpc-panel>@trpc/server": "11"
      }
    }
  }
}