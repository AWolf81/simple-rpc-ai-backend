# OAuth 2.0 Identity Provider Configuration for Federated Authentication
# Copy this to .env and configure your identity providers

# Server Configuration (OAuth callbacks will use this)
PORT=8000

# Optional: Override base URL for OAuth callbacks (useful for production/reverse proxy)
# If not set, defaults to http://localhost:${PORT}
# OAUTH_BASE_URL=https://your-domain.com

# Google OAuth (OIDC)
# 1. Go to https://console.cloud.google.com/apis/credentials
# 2. Create OAuth 2.0 Client ID
# 3. Add authorized redirect URI: http://localhost:8000/callback/google
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth (OAuth2)  
# 1. Go to https://github.com/settings/developers
# 2. Register a new OAuth App
# 3. Set authorization callback URL: http://localhost:8000/callback/github
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Microsoft OAuth (OIDC)
# 1. Go to https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps
# 2. Register an application
# 3. Add redirect URI: http://localhost:8000/callback/microsoft
MICROSOFT_CLIENT_ID=your-microsoft-client-id  
MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret

# Security Configuration

# OAuth Session Encryption Key (REQUIRED for production)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# Used to encrypt OAuth tokens and session data in file storage
OAUTH_SESSION_ENCRYPTION_KEY=your_64_character_hex_encryption_key_here

# Token encryption key (32 hex characters = 16 bytes)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# If not provided, a random key will be generated each server restart (tokens won't persist)
TOKEN_ENCRYPTION_KEY=your_32_character_hex_encryption_key_here

# MCP Client Configuration (for testing)
MCP_CLIENT_ID=mcp-client
MCP_CLIENT_SECRET=your_mcp_client_secret_here
MCP_REDIRECT_URIS=http://localhost:4000/oauth/callback/debug,http://localhost:3000/oauth/callback

# Production Session Storage (Redis recommended)
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=your_redis_password