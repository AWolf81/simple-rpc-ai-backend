{
  "generated": "2025-09-22T14:37:09.363Z",
  "version": "1.0.0",
  "description": "tRPC procedure documentation extracted from router",
  "procedures": {
    "ai.test": {
      "path": "/ai/test",
      "type": "mutation",
      "description": "Echo test endpoint for AI service validation",
      "summary": "Test AI endpoint",
      "tags": [
        "AI",
        "Testing"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "message": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodOptional",
              "description": null,
              "innerType": {
                "type": "ZodString",
                "description": null
              }
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "message": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "enabled": true,
          "description": "Just a echo test endpoint"
        },
        "openapi": {
          "method": "POST",
          "path": "/ai/test",
          "tags": [
            "AI",
            "Testing"
          ],
          "summary": "Test AI endpoint",
          "description": "Echo test endpoint for AI service validation"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "POST"
    },
    "ai.health": {
      "path": "ai.health",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.generateText": {
      "path": "ai.generateText",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "content": {
            "type": "ZodString",
            "description": null
          },
          "systemPrompt": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          },
          "apiKey": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "metadata": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodObject",
              "description": null,
              "properties": {
                "name": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                },
                "type": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                }
              }
            }
          },
          "options": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodObject",
              "description": null,
              "properties": {
                "model": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                },
                "maxTokens": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodDefault",
                    "description": null,
                    "innerType": {
                      "type": "ZodNumber",
                      "description": null
                    }
                  }
                },
                "temperature": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodNumber",
                    "description": null
                  }
                }
              }
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUserProfile": {
      "path": "ai.getUserProfile",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.updateUserPreferences": {
      "path": "ai.updateUserPreferences",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "consumptionOrder": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodArray",
              "description": null
            }
          },
          "byokEnabled": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "byokProviders": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodRecord",
              "description": null
            }
          },
          "notifyTokenLowThreshold": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "notifyFallbackToByok": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "notifyOneTimeConsumed": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.configureBYOK": {
      "path": "ai.configureBYOK",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "providers": {
            "type": "ZodRecord",
            "description": null
          },
          "enabled": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getBYOKStatus": {
      "path": "ai.getBYOKStatus",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUserTokenBalances": {
      "path": "ai.getUserTokenBalances",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.planConsumption": {
      "path": "ai.planConsumption",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "estimatedTokens": {
            "type": "ZodNumber",
            "description": null
          },
          "hasApiKey": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getConsumptionHistory": {
      "path": "ai.getConsumptionHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getTokenBalance": {
      "path": "ai.getTokenBalance",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUsageHistory": {
      "path": "ai.getUsageHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getTopupHistory": {
      "path": "ai.getTopupHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUserStatus": {
      "path": "ai.getUserStatus",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUsageAnalytics": {
      "path": "ai.getUsageAnalytics",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "days": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "includeHistory": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "historyLimit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getPurchaseHistory": {
      "path": "ai.getPurchaseHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "type": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.checkRequestEligibility": {
      "path": "ai.checkRequestEligibility",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "estimatedTokens": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "hasApiKey": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.listProviders": {
      "path": "ai.listProviders",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.listProvidersBYOK": {
      "path": "ai.listProvidersBYOK",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.listAllowedModels": {
      "path": "ai.listAllowedModels",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodOptional",
        "description": null,
        "innerType": {
          "type": "ZodObject",
          "description": null,
          "properties": {
            "provider": {
              "type": "ZodOptional",
              "description": null,
              "innerType": {
                "type": "ZodEnum",
                "description": null
              }
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getRegistryHealth": {
      "path": "ai.getRegistryHealth",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.validateProvider": {
      "path": "ai.validateProvider",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "provider": {
            "type": "ZodEnum",
            "description": null
          },
          "apiKey": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.storeUserKey": {
      "path": "ai.storeUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          },
          "apiKey": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUserKey": {
      "path": "ai.getUserKey",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.getUserProviders": {
      "path": "ai.getUserProviders",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.validateUserKey": {
      "path": "ai.validateUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.rotateUserKey": {
      "path": "ai.rotateUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          },
          "newApiKey": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "ai.deleteUserKey": {
      "path": "ai.deleteUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "mcp.greeting": {
      "path": "/mcp/hello",
      "type": "query",
      "description": "Generate a friendly greeting message for a given name",
      "summary": "Generate greeting",
      "tags": [
        "MCP",
        "Greetings"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "name": {
            "type": "ZodString",
            "description": "The name to greet"
          },
          "language": {
            "type": "ZodEnum",
            "description": "Language code for the greeting (en=English, de=German, es=Spanish)"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "greeting": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "greeting",
          "description": "Generate a friendly greeting message for a given name in multiple languages",
          "category": "utility",
          "public": true,
          "scopes": {
            "description": "Public access - no authentication required"
          }
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/hello",
          "tags": [
            "MCP",
            "Greetings"
          ],
          "summary": "Generate greeting",
          "description": "Generate a friendly greeting message for a given name"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.currentSystemTime": {
      "path": "/mcp/time",
      "type": "query",
      "summary": "Get current time",
      "tags": [
        "MCP",
        "Utility"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "timezone": {
            "type": "ZodString",
            "description": "Timezone identifier (e.g., \"UTC\", \"America/New_York\", \"Europe/Berlin\")"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "time": {
            "type": "ZodString",
            "description": null
          },
          "timezone": {
            "type": "ZodString",
            "description": null
          },
          "timestamp": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "currentSystemTime",
          "description": "Get the current system time in a specified timezone",
          "category": "utility",
          "public": true,
          "scopes": {
            "description": "Public access - no authentication required"
          }
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/time",
          "tags": [
            "MCP",
            "Utility"
          ],
          "summary": "Get current time"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.calculate": {
      "path": "/mcp/calculate",
      "type": "mutation",
      "summary": "Mathematical calculator",
      "tags": [
        "MCP",
        "Utility"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "expression": {
            "type": "ZodString",
            "description": "Mathematical expression to evaluate (e.g., \"2 + 2\", \"10 * 5\")"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "result": {
            "type": "ZodNumber",
            "description": null
          },
          "expression": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "calculate",
          "description": "Perform basic mathematical calculations safely",
          "category": "utility",
          "public": true,
          "scopes": {
            "description": "Public access - no authentication required"
          }
        },
        "openapi": {
          "method": "POST",
          "path": "/mcp/calculate",
          "tags": [
            "MCP",
            "Utility"
          ],
          "summary": "Mathematical calculator"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "POST"
    },
    "mcp.longRunningTask": {
      "path": "/mcp/tasks/start",
      "type": "mutation",
      "summary": "Start long-running task",
      "tags": [
        "MCP",
        "Tasks"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "name": {
            "type": "ZodString",
            "description": "Task name"
          },
          "duration": {
            "type": "ZodDefault",
            "description": "Task duration in milliseconds",
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "shouldFail": {
            "type": "ZodDefault",
            "description": "Whether the task should fail for testing",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "taskId": {
            "type": "ZodString",
            "description": null
          },
          "message": {
            "type": "ZodString",
            "description": null
          },
          "estimatedDuration": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "longRunningTask",
          "description": "Start a long-running task with progress tracking and cancellation support",
          "category": "task"
        },
        "openapi": {
          "method": "POST",
          "path": "/mcp/tasks/start",
          "tags": [
            "MCP",
            "Tasks"
          ],
          "summary": "Start long-running task"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "POST"
    },
    "mcp.cancellableTask": {
      "path": "mcp.cancellableTask",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "name": {
            "type": "ZodString",
            "description": "Task name"
          },
          "steps": {
            "type": "ZodDefault",
            "description": "Number of processing steps",
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "taskId": {
            "type": "ZodString",
            "description": null
          },
          "message": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "cancellableTask",
          "description": "Start a task that can be cancelled mid-execution",
          "category": "task"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "mcp.cancelTask": {
      "path": "mcp.cancelTask",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "taskId": {
            "type": "ZodString",
            "description": "ID of the task to cancel"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "success": {
            "type": "ZodBoolean",
            "description": null
          },
          "message": {
            "type": "ZodString",
            "description": null
          },
          "taskStatus": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "cancelTask",
          "description": "Cancel a running task by ID",
          "category": "task"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "mcp.listRunningTasks": {
      "path": "mcp.listRunningTasks",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "includeCompleted": {
            "type": "ZodDefault",
            "description": "Include completed tasks in the list",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "limit": {
            "type": "ZodDefault",
            "description": "Maximum number of tasks to return",
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "tasks": {
            "type": "ZodArray",
            "description": null
          },
          "total": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "listRunningTasks",
          "description": "List all currently running or recent tasks",
          "category": "task"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "mcp.getTaskProgress": {
      "path": "mcp.getTaskProgress",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "taskId": {
            "type": "ZodString",
            "description": "ID of the task to check"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "task": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodObject",
              "description": null,
              "properties": {
                "id": {
                  "type": "ZodString",
                  "description": null
                },
                "name": {
                  "type": "ZodString",
                  "description": null
                },
                "status": {
                  "type": "ZodString",
                  "description": null
                },
                "progress": {
                  "type": "ZodNumber",
                  "description": null
                },
                "createdAt": {
                  "type": "ZodString",
                  "description": null
                },
                "startedAt": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                },
                "completedAt": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                },
                "duration": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodNumber",
                    "description": null
                  }
                },
                "result": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodAny",
                    "description": null
                  }
                },
                "error": {
                  "type": "ZodOptional",
                  "description": null,
                  "innerType": {
                    "type": "ZodString",
                    "description": null
                  }
                }
              }
            }
          },
          "found": {
            "type": "ZodBoolean",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "getTaskProgress",
          "description": "Get detailed progress information for a specific task",
          "category": "task"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "mcp.getResources": {
      "path": "/mcp/resources",
      "type": "query",
      "summary": "List MCP resources",
      "tags": [
        "MCP",
        "Resources"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "category": {
            "type": "ZodOptional",
            "description": "Filter resources by category",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "search": {
            "type": "ZodOptional",
            "description": "Search resources by name or description",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "resources": {
            "type": "ZodArray",
            "description": null
          },
          "total": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "getResources",
          "description": "List available MCP resources with metadata",
          "category": "resource",
          "public": true,
          "scopes": {
            "description": "Public access - no authentication required"
          }
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/resources",
          "tags": [
            "MCP",
            "Resources"
          ],
          "summary": "List MCP resources"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.readResource": {
      "path": "/mcp/resources/{uri}",
      "type": "query",
      "summary": "Read resource content",
      "tags": [
        "MCP",
        "Resources"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "uri": {
            "type": "ZodString",
            "description": "URI of the resource to read"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "content": {
            "type": "ZodAny",
            "description": null
          },
          "mimeType": {
            "type": "ZodString",
            "description": null
          },
          "uri": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "readResource",
          "description": "Read the content of a specific MCP resource",
          "category": "resource"
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/resources/{uri}",
          "tags": [
            "MCP",
            "Resources"
          ],
          "summary": "Read resource content"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.getPrompts": {
      "path": "/mcp/prompts",
      "type": "query",
      "summary": "List MCP prompt templates",
      "tags": [
        "MCP",
        "Prompts"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "category": {
            "type": "ZodOptional",
            "description": "Filter prompts by category",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "search": {
            "type": "ZodOptional",
            "description": "Search prompts by name or description",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "prompts": {
            "type": "ZodArray",
            "description": null
          },
          "total": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "getPrompts",
          "description": "List available MCP prompt templates with metadata",
          "category": "prompt",
          "public": true,
          "scopes": {
            "description": "Public access - no authentication required"
          }
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/prompts",
          "tags": [
            "MCP",
            "Prompts"
          ],
          "summary": "List MCP prompt templates"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.getPromptTemplate": {
      "path": "/mcp/prompts/{name}",
      "type": "query",
      "summary": "Get prompt template",
      "tags": [
        "MCP",
        "Prompts"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "name": {
            "type": "ZodString",
            "description": "Name of the prompt template to retrieve"
          },
          "arguments": {
            "type": "ZodOptional",
            "description": "Arguments to populate in the template",
            "innerType": {
              "type": "ZodRecord",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "name": {
            "type": "ZodString",
            "description": null
          },
          "description": {
            "type": "ZodString",
            "description": null
          },
          "category": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "messages": {
            "type": "ZodArray",
            "description": null
          },
          "arguments": {
            "type": "ZodArray",
            "description": null
          },
          "populated": {
            "type": "ZodBoolean",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "getPromptTemplate",
          "description": "Get a specific prompt template with its messages and structure",
          "category": "prompt"
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/prompts/{name}",
          "tags": [
            "MCP",
            "Prompts"
          ],
          "summary": "Get prompt template"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.status": {
      "path": "/mcp/status",
      "type": "query",
      "summary": "Server status",
      "tags": [
        "MCP",
        "System"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "detailed": {
            "type": "ZodDefault",
            "description": "Include detailed system information",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "status": {
            "type": "ZodString",
            "description": null
          },
          "uptime": {
            "type": "ZodNumber",
            "description": null
          },
          "memory": {
            "type": "ZodObject",
            "description": null,
            "properties": {
              "used": {
                "type": "ZodNumber",
                "description": null
              },
              "total": {
                "type": "ZodNumber",
                "description": null
              },
              "percentage": {
                "type": "ZodNumber",
                "description": null
              }
            }
          },
          "system": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodObject",
              "description": null,
              "properties": {
                "platform": {
                  "type": "ZodString",
                  "description": null
                },
                "arch": {
                  "type": "ZodString",
                  "description": null
                },
                "nodeVersion": {
                  "type": "ZodString",
                  "description": null
                }
              }
            }
          },
          "mcp": {
            "type": "ZodObject",
            "description": null,
            "properties": {
              "enabled": {
                "type": "ZodBoolean",
                "description": null
              },
              "version": {
                "type": "ZodString",
                "description": null
              },
              "tools": {
                "type": "ZodNumber",
                "description": null
              }
            }
          },
          "timestamp": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "status",
          "description": "Get detailed server status and health information",
          "category": "system"
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/status",
          "tags": [
            "MCP",
            "System"
          ],
          "summary": "Server status"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.advancedExample": {
      "path": "/mcp/admin/advanced",
      "type": "query",
      "summary": "Advanced admin tool",
      "tags": [
        "MCP",
        "Admin"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "operation": {
            "type": "ZodEnum",
            "description": "Operation to perform"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "operation": {
            "type": "ZodString",
            "description": null
          },
          "result": {
            "type": "ZodAny",
            "description": null
          },
          "adminLevel": {
            "type": "ZodBoolean",
            "description": null
          },
          "timestamp": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "advancedExample",
          "description": "Advanced administrative tool with enhanced capabilities",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/admin/advanced",
          "tags": [
            "MCP",
            "Admin"
          ],
          "summary": "Advanced admin tool"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "mcp.getUserInfo": {
      "path": "/mcp/admin/users/{userId}",
      "type": "query",
      "summary": "Get user information",
      "tags": [
        "MCP",
        "Admin"
      ],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "userId": {
            "type": "ZodOptional",
            "description": "User ID to lookup (admin only)",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "includePermissions": {
            "type": "ZodDefault",
            "description": "Include detailed permissions",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "user": {
            "type": "ZodObject",
            "description": null,
            "properties": {
              "id": {
                "type": "ZodString",
                "description": null
              },
              "type": {
                "type": "ZodString",
                "description": null
              },
              "permissions": {
                "type": "ZodOptional",
                "description": null,
                "innerType": {
                  "type": "ZodArray",
                  "description": null
                }
              },
              "lastAccess": {
                "type": "ZodOptional",
                "description": null,
                "innerType": {
                  "type": "ZodString",
                  "description": null
                }
              }
            }
          },
          "adminQuery": {
            "type": "ZodBoolean",
            "description": null
          },
          "timestamp": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "getUserInfo",
          "description": "Get detailed user information and permissions",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        },
        "openapi": {
          "method": "GET",
          "path": "/mcp/admin/users/{userId}",
          "tags": [
            "MCP",
            "Admin"
          ],
          "summary": "Get user information"
        }
      },
      "sourceFile": "src/trpc/root.ts",
      "method": "GET"
    },
    "system.test": {
      "path": "system.test",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "message": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodOptional",
              "description": null,
              "innerType": {
                "type": "ZodString",
                "description": null
              }
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "message": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "enabled": true,
          "description": "Just a echo test endpoint"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.health": {
      "path": "system.health",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "system.getRootFolders": {
      "path": "system.getRootFolders",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": {
        "type": "ZodRecord",
        "description": null
      },
      "meta": {
        "mcp": {
          "name": "getRootFolders",
          "description": "Get all configured root folders with accessibility status",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.listFiles": {
      "path": "system.listFiles",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "rootId": {
            "type": "ZodString",
            "description": "Root folder ID"
          },
          "path": {
            "type": "ZodDefault",
            "description": "Relative path within root folder",
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          },
          "recursive": {
            "type": "ZodDefault",
            "description": "Include subdirectories recursively",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "includeDirectories": {
            "type": "ZodDefault",
            "description": "Include directories in results",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodArray",
        "description": null
      },
      "meta": {
        "mcp": {
          "name": "listFiles",
          "description": "List files and directories in a configured root folder",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.readFile": {
      "path": "system.readFile",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "rootId": {
            "type": "ZodString",
            "description": "Root folder ID"
          },
          "path": {
            "type": "ZodString",
            "description": "Relative file path within root folder"
          },
          "encoding": {
            "type": "ZodDefault",
            "description": "File encoding",
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "content": {
            "type": "ZodString",
            "description": null
          },
          "size": {
            "type": "ZodNumber",
            "description": null
          },
          "encoding": {
            "type": "ZodString",
            "description": null
          },
          "mimeType": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodString",
              "description": null
            }
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "readFile",
          "description": "Read the content of a file from a configured root folder",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.writeFile": {
      "path": "system.writeFile",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "rootId": {
            "type": "ZodString",
            "description": "Root folder ID"
          },
          "path": {
            "type": "ZodString",
            "description": "Relative file path within root folder"
          },
          "content": {
            "type": "ZodString",
            "description": "File content to write"
          },
          "encoding": {
            "type": "ZodDefault",
            "description": "Content encoding",
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "success": {
            "type": "ZodBoolean",
            "description": null
          },
          "path": {
            "type": "ZodString",
            "description": null
          },
          "size": {
            "type": "ZodNumber",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "writeFile",
          "description": "Write content to a file in a configured root folder",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.pathExists": {
      "path": "system.pathExists",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "rootId": {
            "type": "ZodString",
            "description": "Root folder ID"
          },
          "path": {
            "type": "ZodString",
            "description": "Relative path within root folder"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "exists": {
            "type": "ZodBoolean",
            "description": null
          },
          "path": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "pathExists",
          "description": "Check if a file or directory exists in a configured root folder",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.addRootFolder": {
      "path": "system.addRootFolder",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "id": {
            "type": "ZodString",
            "description": "Unique identifier for the root folder"
          },
          "config": {
            "type": "ZodObject",
            "description": null,
            "properties": {
              "path": {
                "type": "ZodString",
                "description": "Absolute path to the root folder"
              },
              "name": {
                "type": "ZodOptional",
                "description": "Display name for the root folder",
                "innerType": {
                  "type": "ZodString",
                  "description": null
                }
              },
              "description": {
                "type": "ZodOptional",
                "description": "Description of the root folder purpose",
                "innerType": {
                  "type": "ZodString",
                  "description": null
                }
              },
              "readOnly": {
                "type": "ZodDefault",
                "description": "Whether this root folder is read-only",
                "innerType": {
                  "type": "ZodBoolean",
                  "description": null
                }
              },
              "allowedPaths": {
                "type": "ZodOptional",
                "description": "Allowed path patterns (glob)",
                "innerType": {
                  "type": "ZodArray",
                  "description": null
                }
              },
              "blockedPaths": {
                "type": "ZodOptional",
                "description": "Blocked path patterns (glob)",
                "innerType": {
                  "type": "ZodArray",
                  "description": null
                }
              },
              "maxFileSize": {
                "type": "ZodOptional",
                "description": "Maximum file size in bytes",
                "innerType": {
                  "type": "ZodNumber",
                  "description": null
                }
              },
              "allowedExtensions": {
                "type": "ZodOptional",
                "description": "Allowed file extensions",
                "innerType": {
                  "type": "ZodArray",
                  "description": null
                }
              },
              "blockedExtensions": {
                "type": "ZodOptional",
                "description": "Blocked file extensions",
                "innerType": {
                  "type": "ZodArray",
                  "description": null
                }
              },
              "followSymlinks": {
                "type": "ZodDefault",
                "description": "Whether to follow symbolic links",
                "innerType": {
                  "type": "ZodBoolean",
                  "description": null
                }
              },
              "enableWatching": {
                "type": "ZodDefault",
                "description": "Whether to watch for file changes",
                "innerType": {
                  "type": "ZodBoolean",
                  "description": null
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "success": {
            "type": "ZodBoolean",
            "description": null
          },
          "id": {
            "type": "ZodString",
            "description": null
          },
          "message": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "addRootFolder",
          "description": "Add a new root folder configuration for file operations",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "system.removeRootFolder": {
      "path": "system.removeRootFolder",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "id": {
            "type": "ZodString",
            "description": "Root folder ID to remove"
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "success": {
            "type": "ZodBoolean",
            "description": null
          },
          "id": {
            "type": "ZodString",
            "description": null
          },
          "message": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "removeRootFolder",
          "description": "Remove a root folder configuration",
          "category": "filesystem"
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "user.getUserProfile": {
      "path": "user.getUserProfile",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "user.updateUserPreferences": {
      "path": "user.updateUserPreferences",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "consumptionOrder": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodArray",
              "description": null
            }
          },
          "byokEnabled": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "byokProviders": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodRecord",
              "description": null
            }
          },
          "notifyTokenLowThreshold": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "notifyFallbackToByok": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "notifyOneTimeConsumed": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "user.configureBYOK": {
      "path": "user.configureBYOK",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "providers": {
            "type": "ZodRecord",
            "description": null
          },
          "enabled": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "user.getBYOKStatus": {
      "path": "user.getBYOKStatus",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "user.getUserStatus": {
      "path": "user.getUserStatus",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "user.checkRequestEligibility": {
      "path": "user.checkRequestEligibility",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "estimatedTokens": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "hasApiKey": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getUserTokenBalances": {
      "path": "billing.getUserTokenBalances",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.planConsumption": {
      "path": "billing.planConsumption",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "estimatedTokens": {
            "type": "ZodNumber",
            "description": null
          },
          "hasApiKey": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getConsumptionHistory": {
      "path": "billing.getConsumptionHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getTokenBalance": {
      "path": "billing.getTokenBalance",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodVoid",
        "description": null
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getUsageHistory": {
      "path": "billing.getUsageHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getTopupHistory": {
      "path": "billing.getTopupHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getUsageAnalytics": {
      "path": "billing.getUsageAnalytics",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "days": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "includeHistory": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "historyLimit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "billing.getPurchaseHistory": {
      "path": "billing.getPurchaseHistory",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "limit": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          },
          "type": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.storeUserKey": {
      "path": "auth.storeUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          },
          "apiKey": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.getUserKey": {
      "path": "auth.getUserKey",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.getUserProviders": {
      "path": "auth.getUserProviders",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.validateUserKey": {
      "path": "auth.validateUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.rotateUserKey": {
      "path": "auth.rotateUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          },
          "newApiKey": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "auth.deleteUserKey": {
      "path": "auth.deleteUserKey",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "email": {
            "type": "ZodString",
            "description": null
          },
          "provider": {
            "type": "ZodEnum",
            "description": null
          }
        }
      },
      "output": null,
      "meta": null,
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.status": {
      "path": "admin.status",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "detailed": {
            "type": "ZodDefault",
            "description": "Include detailed system information",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "status": {
            "type": "ZodString",
            "description": null
          },
          "uptime": {
            "type": "ZodNumber",
            "description": null
          },
          "memory": {
            "type": "ZodObject",
            "description": null,
            "properties": {
              "used": {
                "type": "ZodNumber",
                "description": null
              },
              "total": {
                "type": "ZodNumber",
                "description": null
              },
              "percentage": {
                "type": "ZodNumber",
                "description": null
              }
            }
          },
          "system": {
            "type": "ZodOptional",
            "description": null,
            "innerType": {
              "type": "ZodObject",
              "description": null,
              "properties": {
                "platform": {
                  "type": "ZodString",
                  "description": null
                },
                "arch": {
                  "type": "ZodString",
                  "description": null
                },
                "nodeVersion": {
                  "type": "ZodString",
                  "description": null
                }
              }
            }
          },
          "timestamp": {
            "type": "ZodString",
            "description": null
          }
        }
      },
      "meta": {
        "mcp": {
          "name": "status",
          "description": "Get detailed server status and health information",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.statistics": {
      "path": "admin.statistics",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "days": {
            "type": "ZodDefault",
            "description": "Number of days for statistics",
            "innerType": {
              "type": "ZodNumber",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": {
        "mcp": {
          "name": "statistics",
          "description": "Get detailed system statistics and metrics",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.getUserInfo": {
      "path": "admin.getUserInfo",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "userId": {
            "type": "ZodString",
            "description": "User ID to lookup"
          },
          "includePermissions": {
            "type": "ZodDefault",
            "description": "Include detailed permissions",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          },
          "includeUsage": {
            "type": "ZodDefault",
            "description": "Include usage statistics",
            "innerType": {
              "type": "ZodBoolean",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": {
        "mcp": {
          "name": "getUserInfo",
          "description": "Get detailed user information and permissions",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.getConfig": {
      "path": "admin.getConfig",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "section": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": {
        "mcp": {
          "name": "getConfig",
          "description": "Get current system configuration",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.healthCheck": {
      "path": "admin.healthCheck",
      "type": "query",
      "description": null,
      "summary": null,
      "tags": [],
      "input": null,
      "output": null,
      "meta": {
        "mcp": {
          "name": "healthCheck",
          "description": "Run comprehensive health checks on all services",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    },
    "admin.clearCache": {
      "path": "admin.clearCache",
      "type": "mutation",
      "description": null,
      "summary": null,
      "tags": [],
      "input": {
        "type": "ZodObject",
        "description": null,
        "properties": {
          "target": {
            "type": "ZodDefault",
            "description": null,
            "innerType": {
              "type": "ZodEnum",
              "description": null
            }
          }
        }
      },
      "output": null,
      "meta": {
        "mcp": {
          "name": "clearCache",
          "description": "Clear system caches and reset services",
          "category": "admin",
          "scopes": {
            "anyOf": [
              "mcp:call",
              "mcp:tools",
              "mcp"
            ],
            "description": "Execute MCP tools",
            "namespace": "mcp",
            "adminUsers": [
              "admin@company.com"
            ]
          },
          "requireAdminUser": true
        }
      },
      "sourceFile": "src/trpc/root.ts"
    }
  },
  "mcp": {
    "available": true,
    "methods": {
      "ai.test": {
        "title": "Just a echo test endpoint",
        "description": "Just a echo test endpoint",
        "category": "general",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "test",
                "arguments": {
                  "message": "Hello MCP"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/ai.test",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/ai.test?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"message\":\"Hello MCP\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "ai.test",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "ai.test",
              "params": {
                "message": "Hello MCP"
              }
            }
          }
        }
      },
      "mcp.greeting": {
        "title": "greeting",
        "description": "Generate a friendly greeting message for a given name in multiple languages",
        "category": "utility",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "greeting",
                "arguments": {
                  "name": "World",
                  "language": "en"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.greeting",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.greeting?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22name%22%3A%22World%22%2C%22language%22%3A%22en%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.greeting",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.greeting",
              "params": {
                "name": "World",
                "language": "en"
              }
            }
          }
        }
      },
      "mcp.currentSystemTime": {
        "title": "currentSystemTime",
        "description": "Get the current system time in a specified timezone",
        "category": "utility",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "currentSystemTime",
                "arguments": {
                  "timezone": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.currentSystemTime",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.currentSystemTime?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22timezone%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.currentSystemTime",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.currentSystemTime",
              "params": {
                "timezone": "example"
              }
            }
          }
        }
      },
      "mcp.calculate": {
        "title": "calculate",
        "description": "Perform basic mathematical calculations safely",
        "category": "utility",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "calculate",
                "arguments": {
                  "expression": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.calculate",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/mcp.calculate?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"expression\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.calculate",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.calculate",
              "params": {
                "expression": "example"
              }
            }
          }
        }
      },
      "mcp.longRunningTask": {
        "title": "longRunningTask",
        "description": "Start a long-running task with progress tracking and cancellation support",
        "category": "task",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "longRunningTask",
                "arguments": {
                  "name": "World",
                  "duration": 42,
                  "shouldFail": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.longRunningTask",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/mcp.longRunningTask?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"name\":\"World\",\"duration\":42,\"shouldFail\":false}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.longRunningTask",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.longRunningTask",
              "params": {
                "name": "World",
                "duration": 42,
                "shouldFail": false
              }
            }
          }
        }
      },
      "mcp.cancellableTask": {
        "title": "cancellableTask",
        "description": "Start a task that can be cancelled mid-execution",
        "category": "task",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "cancellableTask",
                "arguments": {
                  "name": "World",
                  "steps": 42
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.cancellableTask",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/mcp.cancellableTask?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"name\":\"World\",\"steps\":42}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.cancellableTask",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.cancellableTask",
              "params": {
                "name": "World",
                "steps": 42
              }
            }
          }
        }
      },
      "mcp.cancelTask": {
        "title": "cancelTask",
        "description": "Cancel a running task by ID",
        "category": "task",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "cancelTask",
                "arguments": {
                  "taskId": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.cancelTask",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/mcp.cancelTask?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"taskId\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.cancelTask",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.cancelTask",
              "params": {
                "taskId": "example"
              }
            }
          }
        }
      },
      "mcp.listRunningTasks": {
        "title": "listRunningTasks",
        "description": "List all currently running or recent tasks",
        "category": "task",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "listRunningTasks",
                "arguments": {
                  "includeCompleted": false,
                  "limit": 42
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.listRunningTasks",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.listRunningTasks?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeCompleted%22%3Afalse%2C%22limit%22%3A42%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.listRunningTasks",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.listRunningTasks",
              "params": {
                "includeCompleted": false,
                "limit": 42
              }
            }
          }
        }
      },
      "mcp.getTaskProgress": {
        "title": "getTaskProgress",
        "description": "Get detailed progress information for a specific task",
        "category": "task",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getTaskProgress",
                "arguments": {
                  "taskId": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.getTaskProgress",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.getTaskProgress?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22taskId%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.getTaskProgress",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.getTaskProgress",
              "params": {
                "taskId": "example"
              }
            }
          }
        }
      },
      "mcp.getResources": {
        "title": "getResources",
        "description": "List available MCP resources with metadata",
        "category": "resource",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getResources",
                "arguments": {
                  "category": "example",
                  "search": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.getResources",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.getResources?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22category%22%3A%22example%22%2C%22search%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.getResources",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.getResources",
              "params": {
                "category": "example",
                "search": "example"
              }
            }
          }
        }
      },
      "mcp.readResource": {
        "title": "readResource",
        "description": "Read the content of a specific MCP resource",
        "category": "resource",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "readResource",
                "arguments": {
                  "uri": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.readResource",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.readResource?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22uri%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.readResource",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.readResource",
              "params": {
                "uri": "example"
              }
            }
          }
        }
      },
      "mcp.getPrompts": {
        "title": "getPrompts",
        "description": "List available MCP prompt templates with metadata",
        "category": "prompt",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getPrompts",
                "arguments": {
                  "category": "example",
                  "search": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.getPrompts",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.getPrompts?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22category%22%3A%22example%22%2C%22search%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.getPrompts",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.getPrompts",
              "params": {
                "category": "example",
                "search": "example"
              }
            }
          }
        }
      },
      "mcp.getPromptTemplate": {
        "title": "getPromptTemplate",
        "description": "Get a specific prompt template with its messages and structure",
        "category": "prompt",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getPromptTemplate",
                "arguments": {
                  "name": "World",
                  "arguments": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.getPromptTemplate",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.getPromptTemplate?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22name%22%3A%22World%22%2C%22arguments%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.getPromptTemplate",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.getPromptTemplate",
              "params": {
                "name": "World",
                "arguments": "example"
              }
            }
          }
        }
      },
      "mcp.status": {
        "title": "status",
        "description": "Get detailed server status and health information",
        "category": "system",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "status",
                "arguments": {
                  "detailed": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.status",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.status?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22detailed%22%3Afalse%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.status",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.status",
              "params": {
                "detailed": false
              }
            }
          }
        }
      },
      "mcp.advancedExample": {
        "title": "advancedExample",
        "description": "Advanced administrative tool with enhanced capabilities",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "advancedExample",
                "arguments": {
                  "operation": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.advancedExample",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.advancedExample?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22operation%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.advancedExample",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.advancedExample",
              "params": {
                "operation": "example"
              }
            }
          }
        }
      },
      "mcp.getUserInfo": {
        "title": "getUserInfo",
        "description": "Get detailed user information and permissions",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getUserInfo",
                "arguments": {
                  "userId": "example",
                  "includePermissions": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/mcp.getUserInfo",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/mcp.getUserInfo?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22userId%22%3A%22example%22%2C%22includePermissions%22%3Afalse%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "mcp.getUserInfo",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "mcp.getUserInfo",
              "params": {
                "userId": "example",
                "includePermissions": false
              }
            }
          }
        }
      },
      "system.test": {
        "title": "Just a echo test endpoint",
        "description": "Just a echo test endpoint",
        "category": "general",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "test",
                "arguments": {
                  "message": "Hello MCP"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.test",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/system.test?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"message\":\"Hello MCP\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.test",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.test",
              "params": {
                "message": "Hello MCP"
              }
            }
          }
        }
      },
      "system.getRootFolders": {
        "title": "getRootFolders",
        "description": "Get all configured root folders with accessibility status",
        "category": "filesystem",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getRootFolders",
                "arguments": {}
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.getRootFolders",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/system.getRootFolders?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.getRootFolders",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.getRootFolders",
              "params": {}
            }
          }
        }
      },
      "system.listFiles": {
        "title": "listFiles",
        "description": "List files and directories in a configured root folder",
        "category": "filesystem",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "listFiles",
                "arguments": {
                  "rootId": "example",
                  "path": "example",
                  "recursive": false,
                  "includeDirectories": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.listFiles",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/system.listFiles?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22rootId%22%3A%22example%22%2C%22path%22%3A%22example%22%2C%22recursive%22%3Afalse%2C%22includeDirectories%22%3Afalse%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.listFiles",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.listFiles",
              "params": {
                "rootId": "example",
                "path": "example",
                "recursive": false,
                "includeDirectories": false
              }
            }
          }
        }
      },
      "system.readFile": {
        "title": "readFile",
        "description": "Read the content of a file from a configured root folder",
        "category": "filesystem",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "readFile",
                "arguments": {
                  "rootId": "example",
                  "path": "example",
                  "encoding": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.readFile",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/system.readFile?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22rootId%22%3A%22example%22%2C%22path%22%3A%22example%22%2C%22encoding%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.readFile",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.readFile",
              "params": {
                "rootId": "example",
                "path": "example",
                "encoding": "example"
              }
            }
          }
        }
      },
      "system.writeFile": {
        "title": "writeFile",
        "description": "Write content to a file in a configured root folder",
        "category": "filesystem",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "writeFile",
                "arguments": {
                  "rootId": "example",
                  "path": "example",
                  "content": "example",
                  "encoding": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.writeFile",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/system.writeFile?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"rootId\":\"example\",\"path\":\"example\",\"content\":\"example\",\"encoding\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.writeFile",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.writeFile",
              "params": {
                "rootId": "example",
                "path": "example",
                "content": "example",
                "encoding": "example"
              }
            }
          }
        }
      },
      "system.pathExists": {
        "title": "pathExists",
        "description": "Check if a file or directory exists in a configured root folder",
        "category": "filesystem",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "pathExists",
                "arguments": {
                  "rootId": "example",
                  "path": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.pathExists",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/system.pathExists?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22rootId%22%3A%22example%22%2C%22path%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.pathExists",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.pathExists",
              "params": {
                "rootId": "example",
                "path": "example"
              }
            }
          }
        }
      },
      "system.addRootFolder": {
        "title": "addRootFolder",
        "description": "Add a new root folder configuration for file operations",
        "category": "filesystem",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "addRootFolder",
                "arguments": {
                  "id": "example",
                  "config": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.addRootFolder",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/system.addRootFolder?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"id\":\"example\",\"config\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.addRootFolder",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.addRootFolder",
              "params": {
                "id": "example",
                "config": "example"
              }
            }
          }
        }
      },
      "system.removeRootFolder": {
        "title": "removeRootFolder",
        "description": "Remove a root folder configuration",
        "category": "filesystem",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "removeRootFolder",
                "arguments": {
                  "id": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/system.removeRootFolder",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/system.removeRootFolder?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"id\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "system.removeRootFolder",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "system.removeRootFolder",
              "params": {
                "id": "example"
              }
            }
          }
        }
      },
      "admin.status": {
        "title": "status",
        "description": "Get detailed server status and health information",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "status",
                "arguments": {
                  "detailed": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.status",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/admin.status?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22detailed%22%3Afalse%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.status",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.status",
              "params": {
                "detailed": false
              }
            }
          }
        }
      },
      "admin.statistics": {
        "title": "statistics",
        "description": "Get detailed system statistics and metrics",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "statistics",
                "arguments": {
                  "days": 42
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.statistics",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/admin.statistics?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22days%22%3A42%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.statistics",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.statistics",
              "params": {
                "days": 42
              }
            }
          }
        }
      },
      "admin.getUserInfo": {
        "title": "getUserInfo",
        "description": "Get detailed user information and permissions",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getUserInfo",
                "arguments": {
                  "userId": "example",
                  "includePermissions": false,
                  "includeUsage": false
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.getUserInfo",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/admin.getUserInfo?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22userId%22%3A%22example%22%2C%22includePermissions%22%3Afalse%2C%22includeUsage%22%3Afalse%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.getUserInfo",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.getUserInfo",
              "params": {
                "userId": "example",
                "includePermissions": false,
                "includeUsage": false
              }
            }
          }
        }
      },
      "admin.getConfig": {
        "title": "getConfig",
        "description": "Get current system configuration",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "getConfig",
                "arguments": {
                  "section": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.getConfig",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/admin.getConfig?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22section%22%3A%22example%22%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.getConfig",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.getConfig",
              "params": {
                "section": "example"
              }
            }
          }
        }
      },
      "admin.healthCheck": {
        "title": "healthCheck",
        "description": "Run comprehensive health checks on all services",
        "category": "admin",
        "type": "query",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "healthCheck",
                "arguments": {}
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.healthCheck",
            "method": "GET",
            "example": "curl -X GET \"http://localhost:8000/trpc/admin.healthCheck?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%7D%7D%7D\""
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.healthCheck",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.healthCheck",
              "params": {}
            }
          }
        }
      },
      "admin.clearCache": {
        "title": "clearCache",
        "description": "Clear system caches and reset services",
        "category": "admin",
        "type": "mutation",
        "calling": {
          "mcp": {
            "endpoint": "http://localhost:8000/mcp",
            "method": "tools/call",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "tools/call",
              "params": {
                "name": "clearCache",
                "arguments": {
                  "target": "example"
                }
              }
            }
          },
          "trpc": {
            "endpoint": "http://localhost:8000/trpc/admin.clearCache",
            "method": "POST",
            "example": "curl -X POST \"http://localhost:8000/trpc/admin.clearCache?batch=1\" -H \"Content-Type: application/json\" -d '[{\"0\":{\"json\":{\"target\":\"example\"}}}]'"
          },
          "jsonRpc": {
            "endpoint": "http://localhost:8000/rpc",
            "method": "admin.clearCache",
            "example": {
              "jsonrpc": "2.0",
              "id": 1,
              "method": "admin.clearCache",
              "params": {
                "target": "example"
              }
            }
          }
        }
      }
    },
    "endpoint": "http://localhost:8000/mcp",
    "protocolVersion": "2024-11-05"
  },
  "stats": {
    "totalProcedures": 78,
    "queries": 54,
    "mutations": 24,
    "subscriptions": 0,
    "mcpMethods": 30
  }
}