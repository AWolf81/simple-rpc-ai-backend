name: Docs Preview

on:
  pull_request:
    paths:
      - 'docs/**'
      - '!docs/_site/**'
      - '!docs/.jekyll-cache/**'
      - '!docs/vendor/**'
      - '!docs/.bundle/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: docs-preview-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    name: Build Jekyll preview
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
          working-directory: docs

      - name: Build site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview-pr-${{ github.event.pull_request.number || 'main' }}
          path: docs/_site
          if-no-files-found: error
          retention-days: 14

      - name: Comment PR with download instructions
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const runId = context.runId;
            const artifactUrl = `https://github.com/${{ github.repository }}/actions/runs/${runId}`;

            const comment = `## ðŸ“– Docs Preview Built!

            Your documentation has been built successfully. To view the preview:

            1. ðŸ”— **[Download the preview artifact](${artifactUrl})** (look for "docs-preview-pr-${prNumber}")
            2. Extract the ZIP file
            3. Open \`index.html\` in your browser, or serve with:
               \`\`\`bash
               cd docs-preview-pr-${prNumber}
               python3 -m http.server 8000
               # Then visit http://localhost:8000
               \`\`\`

            **Alternative:** For easier PR previews without affecting production, consider:
            - Setting up [Netlify](https://www.netlify.com/) or [Cloudflare Pages](https://pages.cloudflare.com/) (automatic PR previews)
            - Using a separate GitHub Pages repository for previews

            <details>
            <summary>ðŸ’¡ Why not auto-deploy?</summary>

            GitHub Pages only supports one deployment target per repository. Deploying PR previews would overwrite the production docs. For automatic PR previews with unique URLs, use Netlify or Cloudflare Pages.
            </details>`;

            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ðŸ“– Docs Preview Built!')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
