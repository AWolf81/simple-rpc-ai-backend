name: Docs Preview

on:
  pull_request:
    paths:
      - 'docs/**'
      - '!docs/_site/**'
      - '!docs/.jekyll-cache/**'
      - '!docs/vendor/**'
      - '!docs/.bundle/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: docs-preview-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    name: Build Jekyll preview
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
          working-directory: docs

      - name: Build site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: docs-preview-pr-${{ github.event.pull_request.number || 'main' }}
          path: docs/_site
          if-no-files-found: error
          retention-days: 14

      - name: Generate preview URLs
        id: urls
        run: |
          echo "artifact_url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "pr_number=${{ github.event.pull_request.number || 'main' }}" >> $GITHUB_OUTPUT

      - name: Add job summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY <<'EOF'
          # 📖 Docs Preview Ready!

          Your documentation preview has been built successfully.

          ## 🔗 Quick Access

          **[📦 Download Preview Artifact](${{ steps.urls.outputs.artifact_url }})**

          Look for: `docs-preview-pr-${{ steps.urls.outputs.pr_number }}`

          ## 📋 How to View

          ### Option 1: Download and Open
          1. Click the artifact link above
          2. Extract the ZIP file
          3. Open `index.html` in your browser

          ### Option 2: Local Server
          ```bash
          # After extracting the artifact
          cd docs-preview-pr-${{ steps.urls.outputs.pr_number }}
          python3 -m http.server 8000
          # Visit http://localhost:8000
          ```

          ---

          💡 **Tip:** For automatic PR previews at unique URLs (no downloads), consider [Netlify](https://www.netlify.com/) or [Cloudflare Pages](https://pages.cloudflare.com/)
          EOF

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const runId = context.runId;
            const artifactUrl = `https://github.com/${{ github.repository }}/actions/runs/${runId}`;

            const comment = `### 📖 Docs Preview Ready!

            | | |
            |---|---|
            | 🔗 **Preview** | **[Download Artifact](${artifactUrl})** → \`docs-preview-pr-${prNumber}\` |
            | 📦 **Artifact** | \`docs-preview-pr-${prNumber}\` |
            | ⏱️ **Retention** | 14 days |
            | 🔄 **Status** | ✅ Built successfully |

            <details>
            <summary>📋 How to view the preview</summary>

            ### Quick View
            1. Click the "Download Artifact" link above
            2. Download \`docs-preview-pr-${prNumber}\`
            3. Extract and open \`index.html\`

            ### Local Server
            \`\`\`bash
            cd docs-preview-pr-${prNumber}
            python3 -m http.server 8000
            # Visit http://localhost:8000
            \`\`\`

            </details>

            ---
            <sub>💡 Want automatic PR previews with live URLs? Check out [Netlify](https://www.netlify.com/) or [Cloudflare Pages](https://pages.cloudflare.com/)</sub>`;

            // Find and update/create comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('📖 Docs Preview Ready!')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
